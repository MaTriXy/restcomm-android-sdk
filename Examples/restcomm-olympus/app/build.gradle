apply plugin: 'com.android.application'
apply plugin: 'testfairy'
apply plugin: 'license'

buildscript {
    repositories {
        // Only add repositories here that are used in *buildscript dependencies* NOT application dependencies. These go to the separate repositories block further down
        mavenCentral()
        maven { url 'https://www.testfairy.com/maven' }
        maven { url "https://maven.google.com" }
    }

    dependencies {
        // TestFairy gradle plugin
        classpath 'com.testfairy.plugins.gradle:testfairy:2.+'

        // Show licenses from all dependencies
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.10.0'
    }
}

android {
    signingConfigs {
        release_signing_config {
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
            storeFile file(System.properties['user.home'] + "/" + STORE_FILE)
            storePassword STORE_PASSWORD
        }
    }

    compileSdkVersion 26
    //buildToolsVersion '25.0.3'

    dexOptions {
        jumboMode = true
    }

    defaultConfig {
        applicationId "org.restcomm.android.olympus"
        minSdkVersion 21
        targetSdkVersion 26

        logger.info("-- Using versionCode: " + VERSION_CODE)
        versionCode VERSION_CODE.toInteger()

        logger.info("-- Using versionName: " + VERSION_NAME)
        versionName VERSION_NAME

        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
        multiDexEnabled true
    }

    testOptions {
        execution 'ANDROID_TEST_ORCHESTRATOR'
    }

    buildTypes {
        // set the .apk names depending on build-type & flavor
        applicationVariants.all { variant ->
            variant.outputs.all {
                outputFileName = "restcomm-olympus-${variant.flavorName}-${variant.versionName}+${variant.versionCode}-${variant.buildType.name}.apk"
            }
        }

        release {
            // Not specifying applicationIdSuffix since release uses the default applicationId: org.restcomm.android.olympus
            buildConfigField "boolean", "ENABLE_TEST_FAIRY_RUNTIME", "true"
            buildConfigField "String", "TESTFAIRY_APP_TOKEN", TESTFAIRY_APP_TOKEN
            buildConfigField "String", "TEST_PUSH_FCM_KEY", TEST_PUSH_FCM_KEY

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release_signing_config

            // TODO: Let's allow release builds to be debuggable (so that logcat is available) for now as we 're using them locally
            // for daily use and need to be able to troubleshoot easily. Let's revisit before GA
            debuggable true
        }

        debug {
            buildConfigField "boolean", "ENABLE_TEST_FAIRY_RUNTIME", "false"
            buildConfigField "String", "TESTFAIRY_APP_TOKEN", TESTFAIRY_APP_TOKEN
            // Pass the credentials to the build config so that they can be accessed by the application.
            // Notice that those are declared both in global gradle.properties (secret) and project gradle.properties
            // so that proper testing can be conducted by the team, while community can use default user/pass in their
            // Restcomm installation
            buildConfigField "String", "TEST_RESTCOMM_LOGIN", TEST_RESTCOMM_LOGIN
            buildConfigField "String", "TEST_RESTCOMM_PASSWORD", TEST_RESTCOMM_PASSWORD
            buildConfigField "String", "TEST_RESTCOMM_ACCOUNT_SID", TEST_RESTCOMM_ACCOUNT_SID
            buildConfigField "String", "TEST_RESTCOMM_AUTH_TOKEN", TEST_RESTCOMM_AUTH_TOKEN

            buildConfigField "String", "TEST_PUSH_ACCOUNT", TEST_PUSH_ACCOUNT
            buildConfigField "String", "TEST_PUSH_PASSWORD", TEST_PUSH_PASSWORD
            buildConfigField "String", "TEST_PUSH_FCM_KEY", TEST_PUSH_FCM_KEY

            applicationIdSuffix ".debug"
            debuggable true

            minifyEnabled false
        }

        // TODO: currently getting some lint error from log4j library we 're using, that we need to fix and then remove this altogether:
        lintOptions {
            abortOnError false
        }


    }

    // With Android plugin for Gradle 3.0.0 or higher, you must assign each flavor to a flavor dimension
    flavorDimensions "defaultFlavorDimension"

    productFlavors {
        community {
            // Not specifying applicationIdSuffix since community is the default applicationId: org.restcomm.android.olympus (for release)
            // or org.restcomm.android.olympus.debug depending on buildType

            // Set specific application name as a resource, so that it's clear in the device what flavor a user is looking at
            resValue "string", "app_name", "Restcomm WebRTC Demo Community"

            // ICE_USERNAME, ICE_PASSWORD, ICE_DOMAIN &ICE_URL are defined in project gradle.properties for community builds, but also overriden
            // by gradle properties passed from command line (i.e. $ gradlew ... -PICE_DOMAIN=...) for Telestax builds from our
            // CI scripts. Reason for this is that Telestax builds use different settings
            // for ICE that are meant for production systems, and which should remain secret
            if (project.hasProperty('COMMUNITY_ICE_USERNAME') && project.hasProperty('COMMUNITY_ICE_PASSWORD') &&
                    project.hasProperty('COMMUNITY_ICE_DOMAIN') && project.hasProperty('COMMUNITY_ICE_URL')) {
                // Add them as resource values which are available in preferences.xml
                resValue "string", "ICE_USERNAME", COMMUNITY_ICE_USERNAME
                resValue "string", "ICE_PASSWORD", COMMUNITY_ICE_PASSWORD
                resValue "string", "ICE_DOMAIN", COMMUNITY_ICE_DOMAIN
                resValue "string", "ICE_URL", COMMUNITY_ICE_URL
            }

            //applicationIdSuffix ".premium"
        }

        premium {
            applicationIdSuffix ".premium"

            // Set specific application name as a resource, so that it's clear in the device what flavor a user is looking at
            resValue "string", "app_name", "Restcomm WebRTC Demo Premium"

            // ICE_USERNAME, ICE_PASSWORD, ICE_DOMAIN &ICE_URL are defined in project gradle.properties for community builds, but also overriden
            // by gradle properties passed from command line (i.e. $ gradlew ... -PICE_DOMAIN=...) for Telestax builds from our
            // CI scripts. Reason for this is that Telestax builds use different settings
            // for ICE that are meant for production systems, and which should remain secret
            if (project.hasProperty('PREMIUM_ICE_USERNAME') && project.hasProperty('PREMIUM_ICE_PASSWORD') &&
                    project.hasProperty('PREMIUM_ICE_DOMAIN') && project.hasProperty('PREMIUM_ICE_URL')) {
                // Add them as resource values which are available in preferences.xml
                resValue "string", "ICE_USERNAME", PREMIUM_ICE_USERNAME
                resValue "string", "ICE_PASSWORD", PREMIUM_ICE_PASSWORD
                resValue "string", "ICE_DOMAIN", PREMIUM_ICE_DOMAIN
                resValue "string", "ICE_URL", PREMIUM_ICE_URL
            }
        }
    }

    testfairyConfig {
        if (project.hasProperty('TESTFAIRY_APIKEY')) {
            apiKey TESTFAIRY_APIKEY
        }
        if (project.hasProperty('TESTFAIRY_AUTOUPDATE')) {
            autoUpdate TESTFAIRY_AUTOUPDATE.toBoolean()
        }

        metrics "cpu,memory,network,network-requests,phone-signal,logcat,gps,battery,mic,wifi"
        video "wifi"
        videoRate "0.5"
        videoQuality "low"
        maxDuration "24h"
        recordOnBackground true
        //iconWatermark true
        testersGroups "dev,qa,friends"
        notify true

        //autoUpdate TESTFAIRY_AUTOUPDATE.toBoolean()
        //uploadProguardMapping true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

repositories {

    //mavenLocal()
    jcenter()

    // IMPORTANT: For some weird reason this repo needs to be declared here even though dependency that actually uses it is in restcomm.android.sdk module

    // If we don't the dependency is not found :(
    maven {
        url "http://telestax.jfrog.io/telestax/community-releases"
    }

    /*
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
    */

    /*
    // uncomment this to test when staging the release
    maven {
        url "https://oss.sonatype.org/content/repositories/staging/"
    }
    */

    maven {
        url 'https://www.testfairy.com/maven'
    }

    maven {
        url "https://maven.google.com"
    }
/*
    maven {
        url "https://maven.repository.redhat.com/ga/"
    }
*/

    google()
}

dependencies {
    testCompile 'junit:junit:4.12'
    // Use local library code
    compile project(':restcomm.android.sdk')
    // If you want to use latest released restcomm-android-sdk library, please uncomment this and comment previous line
    //compile 'org.restcomm:restcomm-android-sdk:1.0.3-BETA6-134'
    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.android.support:design:26.1.0'
    compile 'com.android.support:support-v4:26.1.0'
    compile 'testfairy:testfairy-android-sdk:1.+@aar'
    //compile 'testfairy:testfairy-android-sdk:1.4.5'
    //compile 'net.hockeyapp.android:HockeySDK:4.1.1'
    ////compile files('./libs/testfairy-android-sdk-1.4.6-unlimited-events.jar')
    compile 'com.google.firebase:firebase-messaging:11.8.0'

    // AndroidJUnitRunner and JUnit Rules
    // Remember that we need to prefix instrumented tests with 'android'
    androidTestCompile 'com.android.support.test:runner:1.0.1'
    androidTestCompile 'com.android.support.test:rules:1.0.1'
    androidTestUtil 'com.android.support.test:orchestrator:1.0.1'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:3.0.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    // We need uiautomator so that we can interact with permission dialogs that come from the Android system, NOT the App
    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.3'
    androidTestCompile 'com.loopj.android:android-async-http:1.4.9'
    androidTestCompile 'org.awaitility:awaitility:3.0.0'
    androidTestCompile 'com.squareup.assertj:assertj-android:1.1.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
    }

    compile 'com.android.support:multidex:1.0.2'
}

//
/* Uncomment and build with gradle downloadLicenses and a report with all licenses will be generated in build/reports/license
downloadLicenses {
    includeProjectDependencies = true
    dependencyConfiguration = 'compile'
}
*/

apply plugin: 'com.google.gms.google-services'